{"version":3,"sources":["img/pizzas sync /^/.*$","img/pizzas/4-fromages.jpg","img/pizzas/marguerita.jpg","img/pizzas/pepperoni.jpg","img/pizzas/reine.jpg","actions/types.js","reducers/index.js","pizzas.js","components/Header.js","components/Tile.js","App.js","components/NewOrder.js","actions/index.js","components/Pizza.js","components/OrderList.js","components/Order.js","components/PaymentOrder.js","components/Orders.js","components/NotFound.js","serviceWorker.js","index.js"],"names":["map","./4-fromages.jpg","./marguerita.jpg","./pepperoni.jpg","./reine.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","ADD_ORDER","ADD_PIZZA_ORDER","SET_ORDER_PAID","DELETE_ORDER","initialState","pizzas","marg","name","price","image","pepp","4fro","rein","orders","JSON","parse","localStorage","getItem","Header","_ref","history","_ref$isHome","isHome","react_default","a","createElement","className","react_fontawesome_index_es","icon","size","onClick","push","Tile","description","bgColor","action","style","backgroundColor","library","add","faPizzaSlice","faShippingFast","faFire","faEuroSign","faEdit","faTrash","faArrowLeft","tiles","App","handleClick","_this","props","_this2","this","tilesDisplay","tile","components_Tile","key","components_Header","Component","NewOrder","componentDidMount","concat","Date","now","addOrder","connect","dispatch","type","payload","total","paid","Pizza","addToOrder","toLocaleString","navigator","language","minimumFractionDigits","src","require","alt","OrderList","orderPizzas","_ref$paid","_ref$setPaid","setPaid","pizzasList","totalPizzaPrice","Math","round","react","Order","oid","addPizzaOrder","match","params","index","findIndex","order","components_Pizza","components_OrderList","state","pid","pizza","PaymentOrder","selectedOrder","handleChange","event","target","value","setState","setOrderPaid","selectedOrderDisplay","length","ordersList","filter","htmlFor","onChange","Orders","editOrder","deleteOrder","NotFound","Boolean","window","location","hostname","store","createStore","arguments","undefined","toConsumableArray","setItem","stringify","objectSpread","currentOrder","splice","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","react_router_dom","react_router","exact","path","component","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19039288.chunk.js","sourcesContent":["var map = {\n\t\"./4-fromages.jpg\": 47,\n\t\"./marguerita.jpg\": 48,\n\t\"./pepperoni.jpg\": 49,\n\t\"./reine.jpg\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","module.exports = __webpack_public_path__ + \"static/media/4-fromages.bf16a90d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marguerita.44ae2bd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pepperoni.b9c11f75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reine.f4fde97f.jpg\";","// On définit simplement des \"types\" pour indiquer ce que va faire l'action\nexport const ADD_ORDER = 'ADD_ORDER';\nexport const ADD_PIZZA_ORDER = 'ADD_PIZZA_ORDER';\nexport const SET_ORDER_PAID = 'SET_ORDER_PAID';\nexport const DELETE_ORDER = 'DELETE_ORDER';","import pizzas from '../pizzas';\nimport { ADD_ORDER, ADD_PIZZA_ORDER, SET_ORDER_PAID, DELETE_ORDER } from '../actions/types';\n\nconst initialState = {\n    pizzas,\n    orders: JSON.parse(localStorage.getItem('orders')) || []\n};\n\nexport default function rootReducer(state = initialState, action) {\n    const orders = [...state.orders];\n    let index;\n\n    switch (action.type) {\n        case ADD_ORDER:\n            localStorage.setItem('orders', JSON.stringify(orders));\n\n            return {\n                ...state, // sans cette information notre state ne sera pas complet (on perd les pizzas)\n                orders: [...state.orders, action.payload]\n            };\n        case ADD_PIZZA_ORDER:\n            const oid = action.payload.id;\n            const pid = action.payload.pizza;\n\n            index = orders.findIndex(order => {\n                return order.id === oid;\n            });\n\n            const currentOrder = { ...orders[index] };\n\n            if (!currentOrder.pizzas[pid]) {\n                currentOrder.pizzas[pid] = 1;\n            } else {\n                currentOrder.pizzas[pid]++;\n            }\n\n            currentOrder.total = Math.round((currentOrder.total + state.pizzas[pid].price) * 10) / 10;\n\n            orders[index] = currentOrder;\n            localStorage.setItem('orders', JSON.stringify(orders));\n\n            return {\n                ...state,\n                orders\n            };\n        case DELETE_ORDER:\n            index = orders.findIndex(order => {\n                return order.id === action.payload;\n            });\n            orders.splice(index, 1);\n\n            localStorage.setItem('orders', JSON.stringify(orders));\n\n            return {\n                ...state,\n                orders\n            }\n        case SET_ORDER_PAID:\n            index = orders.findIndex(order => {\n                return order.id === action.payload;\n            });\n            const order = { ...orders[index] }\n            order.paid = true;\n            orders[index] = order;\n            localStorage.setItem('orders', JSON.stringify(orders));\n\n            return {\n                ...state,\n                orders\n            }\n        default:\n            return state;\n    }\n}","// Une liste de pizzas :P\nconst pizzas = {\n  \"marg\": {\n    name: 'Marguerita',\n    price: 7.90,\n    image: 'marguerita.jpg'\n  },\n  \"pepp\": {\n    name: 'Pepperoni',\n    price: 11.90,\n    image: 'pepperoni.jpg'\n  },\n  \"4fro\": {\n    name: '4 fromages',\n    price: 10.90,\n    image: '4-fromages.jpg'\n  },\n  \"rein\": {\n    name: 'Reine',\n    price: 9.90,\n    image: 'reine.jpg'\n  }\n}\n\nexport default pizzas\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Header = ({ history, isHome = false }) => {\n    \n    const goToHome = () => {\n        history.push(`/`);\n    }\n    \n    return (\n        <header className=\"App-header\">\n            { !isHome ? <FontAwesomeIcon icon=\"arrow-left\" size=\"2x\" className=\"back-button\" onClick={() => goToHome()} /> : \"\" }\n            <div className=\"title-wrapper\">\n                <FontAwesomeIcon icon=\"pizza-slice\" />\n                <h1 className=\"display-1\">Pizza Olivarius</h1>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// Composant dit stateless autrement dit le composant n'a pas besoin de state\nconst Tile = ({ name, description, icon, bgColor, action }) => {\n    return (\n        <div className=\"tile\" onClick={action} style={{\n            backgroundColor: bgColor\n        }}>\n            <div className=\"tile-icon\">\n                <FontAwesomeIcon icon={ icon } />\n            </div>\n            <div className=\"tile-text\">\n                <h2>{ name }</h2>\n                <p>{ description }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPizzaSlice, faShippingFast, faFire, faEuroSign, faEdit, faTrash, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Header from './components/Header';\nimport Tile from './components/Tile';\n\n// Stylesheets\nimport './stylesheets/App.scss';\n\nlibrary.add(faPizzaSlice, faShippingFast, faFire, faEuroSign, faEdit, faTrash, faArrowLeft);\n\nconst tiles = [\n  {\n    name: \"Nouvelle commande\",\n    description: \"Créer et enregistrer une nouvelle commande\",\n    icon: \"shipping-fast\",\n    bgColor: \"#006994\",\n    action: \"new\"\n  },\n  {\n    name: \"Commande en cours\",\n    description: \"Voir le détail des commandes en cours\",\n    icon: \"fire\",\n    bgColor: \"#911d00\",\n    action: \"orders\"\n  },\n  {\n    name: \"Paiement commande\",\n    description: \"Encaisser une commande\",\n    icon: \"euro-sign\",\n    bgColor: \"#009130\",\n    action: \"payment-order\"\n  }\n];\n\nclass App extends Component {\n\n  handleClick = action => {\n    this.props.history.push(action);\n  }\n\n  render() {\n\n    /* le .map s'utilise sur un Array ce qui est notre cas\n    si vous n'avez pas un Array sous la main mais un Object,\n    il faut passer par Object.keys() avant d'utiliser la fonction map */\n    const tilesDisplay = tiles.map(tile => (\n      // pour le onClick ne pas oublier la fonction fléchée sinon la fonction associée au onClick s'éxécute immédiatement\n      <Tile\n        key={tile.action}\n        name={tile.name}\n        description={tile.description}\n        icon={tile.icon}\n        bgColor={tile.bgColor}\n        action={() => this.handleClick(tile.action)} />\n    ));\n\n    return (\n      <div className=\"App\">\n        <Header history={this.props.history} isHome={true} />\n\n        <div className=\"tiles-wrapper\">\n          {tilesDisplay}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addOrder } from '../actions';\n\nclass NewOrder extends Component {\n\n    componentDidMount = () => {\n        const id = `CMD-${Date.now()}`;\n        \n        this.props.addOrder(id);\n        \n        this.props.history.push(`order/${id}`);\n    }\n\n    render() {\n        return (\"\");\n    }\n}\n\n// React Redux\nconst mapDispatchToProps = dispatch => {\n    return {\n        addOrder: id => {\n            dispatch(addOrder(id));\n        }\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(NewOrder);\n","import { ADD_ORDER, ADD_PIZZA_ORDER, DELETE_ORDER, SET_ORDER_PAID } from './types';\n\nexport const addOrder = id => ({\n    type: ADD_ORDER,\n    payload: {\n        id,\n        pizzas: {},\n        total: 0,\n        paid: false\n    }\n});\n\nexport const addPizzaOrder = (oid, pid) => ({\n    type: ADD_PIZZA_ORDER,\n    payload: {\n        id: oid,\n        pizza: pid\n    }\n});\n\nexport const deleteOrder = id => ({\n    type: DELETE_ORDER,\n    payload: id\n});\n\nexport const setOrderPaid = id => ({\n    type: SET_ORDER_PAID,\n    payload: id\n});","import React from 'react';\n\nconst Pizza = ({ name, price, image, addToOrder }) => {\n    \n    // Reformatage du prix\n    price = price.toLocaleString(navigator.language, { minimumFractionDigits: 2 });\n\n    return (\n        <div className=\"pizza-wrapper\" onClick={addToOrder}>\n            <div className=\"pizza\">\n                <img src={require(`../img/pizzas/${image}`)} alt=\"\" className=\"pizza-image\" />\n                <div className=\"pizza-text\">\n                    <h3>{name}</h3>\n                    <div className=\"pizza-price\">{price}€</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Pizza;\n","import React, { Fragment } from 'react';\n\nconst OrderList = ({ pizzas, orderPizzas, total, paid = false, setPaid = false }) => {\n    \n    const pizzasList = Object.keys(orderPizzas).map(key => {\n        const totalPizzaPrice = Math.round((pizzas[key].price * orderPizzas[key]) * 10) / 10;\n        return (\n            <div className=\"order-details-item\" key={key}>\n                <div className=\"pizza-details\">\n                    <span>{pizzas[key].name}</span>\n                    <span>{totalPizzaPrice}€</span>\n                </div>\n                <div className=\"price-details\">({orderPizzas[key]} x {pizzas[key].price}€)</div>\n            </div>\n        );\n    });\n\n    return (\n        <Fragment>\n            <div className=\"order-details-list\">\n                {pizzasList}\n            </div>\n            <div className=\"order-summary\">\n                <div className=\"order-total\">\n                    Soit un total de : <strong>{total}€</strong>\n                </div>\n                {paid ? <button className=\"order-paid-button\" onClick={setPaid}>Encaisser la commande</button> : \"\"}\n            </div>\n        </Fragment>\n    )\n};\n\nexport default OrderList;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { addPizzaOrder } from '../actions';\n\nimport Header from './Header';\nimport Pizza from './Pizza';\nimport OrderList from './OrderList';\n\nclass Order extends Component {\n\n    handleClick = (oid, id) => {\n        this.props.addPizzaOrder(oid, id);\n    }\n\n    render() {\n\n        const oid = this.props.match.params.oid;\n\n        const index = this.props.orders.findIndex(order => {\n            return order.id === oid;\n        });\n\n        const pizzas = Object.keys(this.props.pizzas).map(key => {\n            return (\n                <Pizza \n                    key={key} \n                    name={this.props.pizzas[key].name} \n                    price={this.props.pizzas[key].price} \n                    image={this.props.pizzas[key].image} \n                    addToOrder={() => this.handleClick(oid, key)} \n                />\n            );\n        });\n\n        return (\n            <div className=\"App\">\n                <Header history={this.props.history} />\n\n                <div className=\"order\">\n                    <div className=\"pizzas-wrapper\">\n                        {pizzas}\n                    </div>\n                    <div className=\"order-details-wrapper\">\n                        <div className=\"order-details\">\n                            <h2>Détail de la commande n°{oid}</h2>\n                            {<OrderList \n                                pizzas={this.props.pizzas} \n                                orderPizzas={this.props.orders[index].pizzas} \n                                total={this.props.orders[index].total}\n                            />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// React Redux\nconst mapStateToProps = state => {\n    return {\n        pizzas: state.pizzas,\n        orders: state.orders\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addPizzaOrder: (oid, pid) => {\n            dispatch(addPizzaOrder(oid, pid));\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Order);","import React, { Component } from 'react';\nimport Header from './Header';\nimport Order from './OrderList';\nimport { connect } from 'react-redux';\nimport { setOrderPaid } from '../actions';\n\nclass PaymentOrder extends Component {\n\n    state = {\n        selectedOrder: {}\n    }\n\n    handleChange = event => {\n        const id = event.target.value;\n        const index = this.props.orders.findIndex(order => {\n            return order.id === id;\n        });\n        this.setState({ selectedOrder: this.props.orders[index] });\n    }\n\n    setPaid = () => {\n        this.props.setOrderPaid(this.state.selectedOrder.id);\n        this.setState({selectedOrder: {}})\n    }\n\n    selectedOrderDisplay = () => {\n        if (Object.keys(this.state.selectedOrder).length > 0) {\n            return (\n                <div className=\"order-details\">\n                    <h2>Détail de la commande n°{this.state.selectedOrder.id}</h2>\n                    <Order \n                        paid \n                        setPaid={() => this.setPaid()} \n                        pizzas={this.props.pizzas} \n                        orderPizzas={this.state.selectedOrder.pizzas} \n                        total={this.state.selectedOrder.total} \n                    />\n                </div>\n            );\n        }\n    }\n\n    render() {\n        const ordersList = this.props.orders.filter(order => !order.paid).map(order => {\n            return (\n                <option key={order.id} value={order.id}>{order.id} - {order.total}€</option>\n            );\n        });\n\n        return (\n            <div className=\"App\">\n                <Header history={this.props.history} />\n\n                <div className=\"payment-wrapper\">\n                    <div className=\"order-selection\">\n                        <label htmlFor=\"orderSelect\">Sélectionner la commande à encaisser</label>\n                        <select id=\"orderSelect\" onChange={e => this.handleChange(e)}>\n                            <option value=\"\"></option>\n                            {ordersList}\n                        </select>\n                    </div>\n\n                    <div className=\"payment-order\">\n                        <div className=\"order-details-wrapper\">\n                            {this.selectedOrderDisplay()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// React Redux\nconst mapStateToProps = state => {\n    return {\n        pizzas: state.pizzas,\n        orders: state.orders\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setOrderPaid: id => {\n            dispatch(setOrderPaid(id));\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PaymentOrder);\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { deleteOrder } from '../actions';\n\nclass Orders extends Component {\n\n    editOrder = id => {\n        this.props.history.push(`order/${id}`);\n    }\n\n    render() {\n        const ordersList = this.props.orders.map(order => {\n            return (\n                <tr key={order.id}>\n                    <td>Commande n°{order.id}</td>\n                    <td>{order.total}€</td>\n                    <td className={order.paid ? \"bg-success\" : \"bg-warning\"}>{order.paid ? \"Réglé\" : \"En attente de paiement\"}</td>\n                    <td className={order.paid ? \"order-actions hidden\" : \"order-actions\"}>\n                        <button \n                            className=\"order-action-edit\" \n                            onClick={() => this.editOrder(order.id)}\n                        >\n                            <FontAwesomeIcon icon=\"edit\" size=\"2x\" />\n                        </button>\n                        <button\n                            className=\"order-action-delete\" \n                            onClick={() => this.props.deleteOrder(order.id)}\n                        >\n                            <FontAwesomeIcon icon=\"trash\" size=\"2x\" />\n                        </button>\n                    </td>\n                </tr>\n            );\n        });\n\n        return (\n            <div className=\"App\">\n                <Header history={this.props.history} />\n\n                <div className=\"orders-list\">\n                    <h2>Liste des commandes</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>N°</th>\n                                <th>Total Commande</th>\n                                <th>Statut Commande</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {ordersList}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n// React Redux\nconst mapStateToProps = state => {\n    return {\n        orders: state.orders\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteOrder: (id) => {\n            dispatch(deleteOrder(id));\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Orders);","import React from 'react'\n\nconst NotFound = () => <h2 className='notFound'>Y'a rien ici!</h2>\n\nexport default NotFound\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport NewOrder from './components/NewOrder';\nimport Order from './components/Order';\nimport PaymentOrder from './components/PaymentOrder';\nimport Orders from './components/Orders';\nimport NotFound from './components/NotFound';\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // pour pouvoir utiliser Redux Devtools \n);\n\nconst Root = () => (\n    <Router>\n        <Switch>\n            <Route exact path='/' component={App} />\n            <Route path='/new' component={NewOrder} />\n            <Route path='/order/:oid' component={Order} />\n            <Route exact path='/orders' component={Orders} />\n            <Route exact path='/payment-order' component={PaymentOrder} />\n            <Route component={NotFound} />\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}